# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-14 09:09
from __future__ import unicode_literals

from django.contrib.auth import get_user_model
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from accelerator.models import (
    LegalCheck,
    UserLegalCheck,
)

User = get_user_model()

PRIVACY_POLICY = 'privacy_policy'


def add_privacy_policy_acceptance(apps, schema_editor):
    privacy_policy = LegalCheck.objects.get(name=PRIVACY_POLICY)

    for user in User.objects.all():
        profile = _get_user_profile(user)
        if not profile:
            continue
        UserLegalCheck.objects.create(
            user=user,
            legal_check=privacy_policy,
            accepted=profile.privacy_policy_accepted)


def _get_user_profile(user):
    try:
        return user.entrepreneurprofile
    except ObjectDoesNotExist:
        try:
            return user.expertprofile
        except ObjectDoesNotExist:
            try:
                return user.memberprofile
            except ObjectDoesNotExist:
                return None


def remove_privacy_policy_acceptance(apps, schema_editor):
    privacy_policy = LegalCheck.objects.get(name=PRIVACY_POLICY)
    UserLegalCheck.objects.filter(legal_check=privacy_policy).delete()


class Migration(migrations.Migration):
    dependencies = [
        ('accelerator', '0006_add_privacy_policy_legal_check'),
    ]

    operations = [
        migrations.RunPython(add_privacy_policy_acceptance,
                             remove_privacy_policy_acceptance),

    ]
